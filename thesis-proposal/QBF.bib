
@incollection{de_moura_efficient_2017,
	address = {Cham},
	title = {Efficient {Certified} {RAT} {Verification}},
	volume = {10395},
	isbn = {978-3-319-63045-8 978-3-319-63046-5},
	url = {http://link.springer.com/10.1007/978-3-319-63046-5_14},
	abstract = {Clausal proofs have become a popular approach to validate the results of SAT solvers. However, validating clausal proofs in the most widely supported format (DRAT) is expensive even in highly optimized implementations. We present a new format, called LRAT, which extends the DRAT format with hints that facilitate a simple and fast validation algorithm. Checking validity of LRAT proofs can be implemented using trusted systems such as the languages supported by theorem provers. We demonstrate this by implementing two certiﬁed LRAT checkers, one in Coq and one in ACL2.},
	language = {en},
	urldate = {2023-09-23},
	booktitle = {Automated {Deduction} – {CADE} 26},
	publisher = {Springer International Publishing},
	author = {Cruz-Filipe, Luís and Heule, Marijn J. H. and Hunt, Warren A. and Kaufmann, Matt and Schneider-Kamp, Peter},
	editor = {De Moura, Leonardo},
	year = {2017},
	doi = {10.1007/978-3-319-63046-5_14},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {220--236},
	file = {Cruz-Filipe et al. - 2017 - Efficient Certified RAT Verification.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\48LUH4YD\\Cruz-Filipe et al. - 2017 - Efficient Certified RAT Verification.pdf:application/pdf},
}

@article{bryant_certified_2023,
	title = {Certified {Knowledge} {Compilation} with {Application} to {Verified} {Model} {Counting}},
	abstract = {Computing many useful properties of Boolean formulas, such as their weighted or unweighted model count, is intractable on general representations. It can become tractable when formulas are expressed in a special form, such as the decision-decomposable, negation normal form (dec-DNNF). Knowledge compilation is the process of converting a formula into such a form. Unfortunately existing knowledge compilers provide no guarantee that their output correctly represents the original formula, and therefore they cannot validate a model count, or any other computed value.},
	language = {en},
	author = {Bryant, Randal E and Nawrocki, Wojciech and Avigad, Jeremy and Heule, Marijn J H},
	year = {2023},
	file = {Bryant et al. - 2023 - Certified Knowledge Compilation with Application t.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\UNISY6ZX\\Bryant et al. - 2023 - Certified Knowledge Compilation with Application t.pdf:application/pdf},
}

@incollection{biere_chapter_2021,
	title = {Chapter 31. {Quantified} {Boolean} {Formulas}},
	isbn = {978-1-64368-160-3 978-1-64368-161-0},
	url = {http://ebooks.iospress.nl/doi/10.3233/FAIA201015},
	abstract = {Solvers for quantified Boolean formulas (QBF) have become powerful tools for tackling hard computational problems from various application domains, even beyond the scope of SAT. This chapter gives a description of the main algorithmic paradigms for QBF solving, including quantified conflict driven clause learning (QCDCL), expansion-based solving, dependency schemes, and QBF preprocessing. Particular emphasis is laid on the connections of these solving approaches to QBF proof systems: Q-Resolution and its variants in the case of QCDCL, expansion QBF resolution calculi for expansion-based solving, and QRAT for preprocessing. The chapter also surveys the relations between the various QBF proof systems and results on their proof complexity, thereby shedding light on the diverse performance characteristics of different solving approaches that are observed in practice.},
	language = {en},
	urldate = {2023-11-07},
	booktitle = {Frontiers in {Artificial} {Intelligence} and {Applications}},
	publisher = {IOS Press},
	author = {Beyersdorff, Olaf and Janota, Mikoláš and Lonsing, Florian and Seidl, Martina},
	editor = {Biere, Armin and Heule, Marijn and Van Maaren, Hans and Walsh, Toby},
	month = feb,
	year = {2021},
	doi = {10.3233/FAIA201015},
	file = {Beyersdorff et al. - 2021 - Chapter 31. Quantified Boolean Formulas.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\XUP8AAY4\\Beyersdorff et al. - 2021 - Chapter 31. Quantified Boolean Formulas.pdf:application/pdf},
}

@incollection{hutchison_unified_2014,
	address = {Cham},
	title = {A {Unified} {Proof} {System} for {QBF} {Preprocessing}},
	volume = {8562},
	isbn = {978-3-319-08586-9 978-3-319-08587-6},
	url = {http://link.springer.com/10.1007/978-3-319-08587-6_7},
	abstract = {For quantiﬁed Boolean formulas (QBFs), preprocessing is essential to solve many real-world formulas. Application of a preprocessor, however, prevented the extraction of proofs to independently validate correctness of the solver’s result. Especially for universal expansion proof checking was not possible so far. In this paper, we introduce a uniﬁed proof system based on three simple and elegant quantiﬁed asymmetric tautology (QRAT) rules. In combination with an extended version of universal reduction, they are suﬃcient to eﬃciently express all preprocessing techniques used in state-of-the-art preprocessors including universal expansion. Moreover, these rules give rise to new preprocessing techniques. We equip our preprocessor bloqqer with QRAT proof logging and provide a proof checker for QRAT proofs.},
	language = {en},
	urldate = {2024-01-01},
	booktitle = {Automated {Reasoning}},
	publisher = {Springer International Publishing},
	author = {Heule, Marijn J. H. and Seidl, Martina and Biere, Armin},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Kobsa, Alfred and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Terzopoulos, Demetri and Tygar, Doug and Weikum, Gerhard and Demri, Stéphane and Kapur, Deepak and Weidenbach, Christoph},
	year = {2014},
	doi = {10.1007/978-3-319-08587-6_7},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {91--106},
	file = {Heule et al. - 2014 - A Unified Proof System for QBF Preprocessing.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\64BG68Q5\\Heule et al. - 2014 - A Unified Proof System for QBF Preprocessing.pdf:application/pdf},
}

@article{jordan_non-cnf_nodate,
	title = {Non-{CNF} {QBF} {Solving} with {QCIR}},
	abstract = {While it is empirically conﬁrmed folklore that conjunctive normal form (CNF) is not the ideal input format for QBF solvers, most tool developers and therefore also the users focus on formulas in this restricted structure.},
	language = {en},
	author = {Jordan, Charles and Klieber, Will and Seidl, Martina},
	file = {Jordan et al. - Non-CNF QBF Solving with QCIR.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\V5ZC5YWI\\Jordan et al. - Non-CNF QBF Solving with QCIR.pdf:application/pdf},
}

@article{klieber_formal_nodate,
	title = {Formal {Verification} {Using} {Quantified} {Boolean} {Formulas} ({QBF})},
	language = {en},
	author = {Klieber, William},
	file = {Klieber - Formal Verification Using Quantified Boolean Formu.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\RYLMLSJG\\Klieber - Formal Verification Using Quantified Boolean Formu.pdf:application/pdf},
}

@article{shen_using_nodate,
	title = {{USING} {QBF} {SOLVERS} {TO} {SOLVE} {GAMES} {AND} {PUZZLES}},
	language = {en},
	author = {Shen, Zhihe and Straubing, Howard},
	file = {Shen and Straubing - USING QBF SOLVERS TO SOLVE GAMES AND PUZZLES.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\XSPDPZFS\\Shen and Straubing - USING QBF SOLVERS TO SOLVE GAMES AND PUZZLES.pdf:application/pdf},
}

@inproceedings{shukla_survey_2019,
	address = {Portland, OR, USA},
	title = {A {Survey} on {Applications} of {Quantified} {Boolean} {Formulas}},
	isbn = {978-1-72813-798-8},
	url = {https://ieeexplore.ieee.org/document/8995437/},
	doi = {10.1109/ICTAI.2019.00020},
	abstract = {The decision problem of quantiﬁed Boolean formulas (QBFs) is the archetypical problem for the complexity class PSPACE that contains many reasoning problems of practical relevance. Because of the availability of a rich solving infrastructure aspects QBFs provide an attractive framework for encoding and solving such reasoning problems ranging from symbolic reasoning in artiﬁcial intelligence to the formal veriﬁcation and synthesis of computing systems. In this paper, we survey the different application areas that exploit QBF technology for solving their speciﬁc problems.},
	language = {en},
	urldate = {2024-01-09},
	booktitle = {2019 {IEEE} 31st {International} {Conference} on {Tools} with {Artificial} {Intelligence} ({ICTAI})},
	publisher = {IEEE},
	author = {Shukla, Ankit and Biere, Armin and Pulina, Luca and Seidl, Martina},
	month = nov,
	year = {2019},
	pages = {78--84},
	file = {Shukla et al. - 2019 - A Survey on Applications of Quantified Boolean For.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\QQZYXKMW\\Shukla et al. - 2019 - A Survey on Applications of Quantified Boolean For.pdf:application/pdf},
}

@incollection{creignou_q-resolution_2016,
	address = {Cham},
	title = {On {Q}-{Resolution} and {CDCL} {QBF} {Solving}},
	volume = {9710},
	isbn = {978-3-319-40969-6 978-3-319-40970-2},
	url = {http://link.springer.com/10.1007/978-3-319-40970-2_25},
	abstract = {The proof system Q-resolution and its variations provide the underlying proof systems for the DPLL-based QBF solvers. While (longdistance) Q-resolution models a conﬂict driven clause learning (CDCL) QBF solver, the inverse relation is not well understood. This paper shows that CDCL solving not only does not simulate Q-resolution, but also that this is deeply embedded in the workings of the solver. This contrasts with SAT solving, where CDCL solvers have been shown to simulate resolution.},
	language = {en},
	urldate = {2024-01-09},
	booktitle = {Theory and {Applications} of {Satisfiability} {Testing} – {SAT} 2016},
	publisher = {Springer International Publishing},
	author = {Janota, Mikoláš},
	editor = {Creignou, Nadia and Le Berre, Daniel},
	year = {2016},
	doi = {10.1007/978-3-319-40970-2_25},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {402--418},
	file = {Janota - 2016 - On Q-Resolution and CDCL QBF Solving.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\GQJ5X34A\\Janota - 2016 - On Q-Resolution and CDCL QBF Solving.pdf:application/pdf},
}

@incollection{beyersdorff_circuit-based_2018,
	address = {Cham},
	title = {Circuit-{Based} {Search} {Space} {Pruning} in {QBF}},
	volume = {10929},
	isbn = {978-3-319-94143-1 978-3-319-94144-8},
	url = {http://link.springer.com/10.1007/978-3-319-94144-8_12},
	abstract = {This paper describes the algorithm implemented in the QBF solver CQESTO, which has placed second in the non-CNF track of the last year’s QBF competition. The algorithm is inspired by the CNFbased solver QESTO. Just as QESTO, CQESTO invokes a SAT solver in a black-box fashion. However, it directly operates on the circuit representation of the formula. The paper analyzes the individual operations that the solver performs.},
	language = {en},
	urldate = {2024-01-09},
	booktitle = {Theory and {Applications} of {Satisfiability} {Testing} – {SAT} 2018},
	publisher = {Springer International Publishing},
	author = {Janota, Mikoláš},
	editor = {Beyersdorff, Olaf and Wintersteiger, Christoph M.},
	year = {2018},
	doi = {10.1007/978-3-319-94144-8_12},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {187--198},
	file = {Janota - 2018 - Circuit-Based Search Space Pruning in QBF.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\L4M4ZDBM\\Janota - 2018 - Circuit-Based Search Space Pruning in QBF.pdf:application/pdf},
}

@article{noauthor_qcir-g14_nodate,
	title = {{QCIR}-{G14}: {A} {Non}-{Prenex} {Non}-{CNF} {Format} for {Quantified} {Boolean} {Formulas}},
	url = {https://www.qbflib.org/qcir.pdf},
	urldate = {2024-01-09},
	journal = {QBF Gallery 2014},
	file = {qcir.pdf:C\:\\Users\\Juggler\\Zotero\\storage\\QB77CN4C\\qcir.pdf:application/pdf},
}
